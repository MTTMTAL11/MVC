@model RoboGebV6.Models.Racer
@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <title>Robot Yarışması</title>
    <style>
        body {
            background-color: #f0f2f5;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        .banner {
            background-image: url('https://images.unsplash.com/photo-1593642634367-d91a135587b5?fit=crop&w=1200&q=80');
            background-size: cover;
            background-position: center;
            height: 250px;
            display: flex;
            align-items: center;
            justify-content: center;
            color: #fff;
            text-shadow: 1px 1px 5px #000;
            font-size: 2.5rem;
            font-weight: bold;
        }

        .container-custom {
            margin-top: -100px;
            z-index: 2;
            position: relative;
        }

        .option-card {
            transition: transform 0.3s, box-shadow 0.3s;
            background-color: #ffffff;
            border-radius: 10px;
            padding: 30px;
            box-shadow: 0px 5px 15px rgba(0, 0, 0, 0.1);
        }

            .option-card:hover {
                transform: translateY(-5px);
                box-shadow: 0px 15px 30px rgba(0, 0, 0, 0.2);
            }

        .icon {
            width: 50px;
            height: 50px;
            margin-bottom: 15px;
            color: #6c757d;
        }

        .option-title {
            font-size: 1.2rem;
            font-weight: 600;
            color: #495057;
        }
    </style>
</head>
<body>

    <!-- Banner -->
    <div class="banner">
        Robot Yarışması - Kontrol Paneli
    </div>

    <div class="container container-custom text-center">
        <div class="row g-4 justify-content-center">
            <div class="col-md-4 col-lg-3">
                <a href="#" class="text-decoration-none" data-bs-toggle="modal" data-bs-target="#registrationModal">
                    <div class="option-card bg-warning text-dark">
                        <i class="fa-solid fa-user-plus icon"></i>
                        <h3 class="option-title">Yarışmacı Kayıt</h3>
                    </div>
                </a>
            </div>
        </div>
    </div>

    <div class="container text-center bg-danger option-card mt-5" style="width:305px; height:200px">
        <div class="">
            <a class="btn btn-danger p-2 m-5 fs-5" style="font-size:24px" href="/Racers/Index">Anasayfa</a>
        </div>
    </div>

    <div class="alert alert-warning text-center text-danger">@ViewBag.Message</div>

    <!-- Modal -->
    <div class="modal fade" id="registrationModal" tabindex="-1" aria-labelledby="registrationModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header bg-primary text-white">
                    <h5 class="modal-title" id="registrationModalLabel">Yarışmacı Kayıt</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="d-flex justify-content-between mb-3">
                        <button class="btn btn-outline-primary" onclick="showForm('form1')">Tasarla Çalıştır Kayıt</button>
                        <button class="btn btn-outline-success" onclick="showForm('form2')">Çizgi İzleyen Kayıt</button>
                    </div>

                    <!-- Bireysel Kayıt Formu -->
                    <div id="form1" class="form-section">
                        <h5>Temel ve Hızlı Çizgi İzleyen Kayıt Formu</h5>
                        <div class="container mt-4 card p-4">
                            <h2>Yeni Yarışmacı Ekle</h2>
                            <hr />

                            @using (Html.BeginForm())
                            {
                                @Html.AntiForgeryToken()

                                <div class="form-horizontal">
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                                    <div class="form-group row mb-3">
                                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                        </div>
                                    </div>





                                    <div class="form-group row mb-3">
                                        @Html.LabelFor(model => model.Kategori, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.DropDownListFor(model => model.Kategori, new SelectList(new[]
                                            {
                                                new { Value = "Hızlı Çizgi İzleyen", Text = "Hızlı Çizgi İzleyen" },
                                                new { Value = "Temel Çizgi İzleyen", Text = "Temel Çizgi İzleyen" },
                                                new { Value = "Tasarla Çalıştır", Text = "Tasarla Çalıştır" }

                                    }, "Value", "Text"), "Takım Seçiniz", new { @class = "form-control" })

                                            @Html.ValidationMessageFor(model => model.Kategori, "", new { @class = "text-danger" })
                                        </div>
                                    </div>



                                    <div class="form-group row mb-3">
                                        @Html.LabelFor(model => model.Tasarim, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.Tasarim, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Tasarim, "", new { @class = "text-danger" })
                                        </div>
                                    </div>




                                    <div class="form-group row mb-3">
                                        @Html.LabelFor(model => model.Kod, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.Kod, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Kod, "", new { @class = "text-danger" })
                                        </div>
                                    </div>


                                    <!--    Toplam Exist-->




                                    <div class="form-group row mb-3">
                                        @Html.LabelFor(model => model.Team, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.Team, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Team, "", new { @class = "text-danger" })
                                        </div>
                                    </div>










                                    <div class="form-group row">
                                        <div class="col-md-offset-2 col-md-10">
                                            <input type="submit" value="Ekle" class="btn btn-primary" />
                                            @Html.ActionLink("İptal", "Index", null, new { @class = "btn btn-outline-secondary ms-2" })

                                            <a class="btn btn-warning" href="/Racers/Index">ANASAYFA</a>
                                        </div>



                                    </div>
                                </div>
                            }
                        </div>
                    </div>

                    <!-- Takım Kayıt Formu -->
                    <div id="form2" class="form-section d-none">
                        <h5>Tasarla Çalıştır Kayıt Formu</h5>
                        <div class="container mt-4 card p-4">
                            <h2>Yeni Yarışmacı Ekle</h2>
                            <hr />

                            @using (Html.BeginForm("Create", "Racers", FormMethod.Post, new { enctype = "multipart/form-data" }))
                            {
                                @Html.AntiForgeryToken()

                        <div class="form-horizontal">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                            <div class="form-group row mb-3">
                                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group row mb-3">
                                @Html.LabelFor(model => model.arac, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.arac, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.arac, "", new { @class = "text-danger" })
                                </div>
                            </div>



                            <div class="form-group row mb-3">
                                @Html.LabelFor(model => model.Kategori, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownListFor(model => model.Kategori, new SelectList(new[]
                                    {
                                        new { Value = "Hızlı Çizgi İzleyen", Text = "Hızlı Çizgi İzleyen" },
                                        new { Value = "Temel Çizgi İzleyen", Text = "Temel Çizgi İzleyen" },
                                         new { Value = "Tasarla Çalıştır", Text = "Tasarla Çalıştır" }

                            }, "Value", "Text"), "Takım Seçiniz", new { @class = "form-control" })

                                    @Html.ValidationMessageFor(model => model.Kategori, "", new { @class = "text-danger" })
                                </div>
                            </div>









                            <div class="form-group row mb-3">
                                @Html.LabelFor(model => model.Team, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Team, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Team, "", new { @class = "text-danger" })
                                </div>
                            </div>



                            <div class="form-group row mb-3">
                                @Html.LabelFor(model => model.FinishTime, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.FinishTime, new { htmlAttributes = new { @class = "form-control", placeholder = "ss:dd:dd veya d:dd:dd" } })
                                    @Html.ValidationMessageFor(model => model.FinishTime, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group row mb-3">
                                @Html.LabelFor(model => model.ProfileImage1, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextBoxFor(model => model.ProfileImage1, new { @class = "form-control", type = "file", accept = "image/*" })
                                    
                                    @Html.ValidationMessageFor(model => model.ProfileImage1, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group row mb-3">
                                @Html.LabelFor(model => model.ProfileImage2, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextBoxFor(model => model.ProfileImage2, new { @class = "form-control", type = "file", accept = "image/*" })
                                    
                                    @Html.ValidationMessageFor(model => model.ProfileImage2, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group row mb-3">
                                @Html.LabelFor(model => model.ProfileImage3, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextBoxFor(model => model.ProfileImage3, new { @class = "form-control", type = "file", accept = "image/*" })
                                    
                                    @Html.ValidationMessageFor(model => model.ProfileImage3, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group row mb-3">
                                @Html.LabelFor(model => model.etiket, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.etiket, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.etiket, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group row">
                                <div class="col-md-offset-2 col-md-10">
                                    <input type="submit" value="Ekle" class="btn btn-primary" />
                                    @Html.ActionLink("İptal", "Index", null, new { @class = "btn btn-outline-secondary ms-2" })

                                    <a class="btn btn-warning" href="/Racers/Index">ANASAYFA</a>
                                </div>



                            </div>
                        </div>
                            }
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Kapat</button>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        function showForm(formId) {
            document.querySelectorAll('.form-section').forEach(form => {
                form.classList.add('d-none');
            });
            document.getElementById(formId).classList.remove('d-none');
        }
    </script>
</body>
</html>